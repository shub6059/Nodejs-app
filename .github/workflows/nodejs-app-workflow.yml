name: CICD

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout source
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'ap-south-1'

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
          REPOSITORY: node_js_task
        run: |
          docker build -t $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV

      - name: Get current version from task definition
        id: get-current-version
        run: |
          # Fetch the current version from your task definition file
          CURRENT_VERSION=$(jq -r '.revision' nodejs-app-def-revision1.json)
          # Increment the version number
          NEW_VERSION=$((CURRENT_VERSION + 1))
          echo "new_version=$NEW_VERSION" >> $GITHUB_ENV

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: nodejs-app-def-revision1.json
          container-name: nodejs-app
          image: ${{ steps.build-image.outputs.image }}
          log-configuration-log-driver: 'awslogs'
          log-configuration-options: '{"awslogs-group": "/ecs/nodejs-app-task-definition", "awslogs-region": "ap-south-1", "awslogs-stream-prefix": "ecs"}'
          docker-labels: '{}'
          environment-variables: '{}'

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: nodejs
          cluster: nodejs_task
          wait-for-service-stability: true
